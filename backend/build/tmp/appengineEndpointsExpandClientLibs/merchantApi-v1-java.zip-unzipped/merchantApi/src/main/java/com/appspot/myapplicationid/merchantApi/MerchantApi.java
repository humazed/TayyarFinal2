/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-09-05 21:06:36 UTC)
 * on 2017-09-20 at 22:54:51 UTC 
 * Modify at your own risk.
 */

package com.appspot.myapplicationid.merchantApi;

/**
 * Service definition for MerchantApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MerchantApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MerchantApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the merchantApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "merchantApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MerchantApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MerchantApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the MerchantApiOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code MerchantApi merchantApi = new MerchantApi(...);}
   *   {@code MerchantApi.MerchantApiOperations.List request = merchantApi.merchantApi().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public MerchantApiOperations merchantApi() {
    return new MerchantApiOperations();
  }

  /**
   * The "merchantApi" collection of methods.
   */
  public class MerchantApiOperations {

    /**
     * Create a request for the method "merchantApi.signUpWithFirebase".
     *
     * This request holds the parameters needed by the merchantApi server.  After setting any optional
     * parameters, call the {@link SignUpWithFirebase#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public SignUpWithFirebase signUpWithFirebase() throws java.io.IOException {
      SignUpWithFirebase result = new SignUpWithFirebase();
      initialize(result);
      return result;
    }

    public class SignUpWithFirebase extends MerchantApiRequest<Void> {

      private static final String REST_PATH = "signUpWithFirebase";

      /**
       * Create a request for the method "merchantApi.signUpWithFirebase".
       *
       * This request holds the parameters needed by the the merchantApi server.  After setting any
       * optional parameters, call the {@link SignUpWithFirebase#execute()} method to invoke the remote
       * operation. <p> {@link SignUpWithFirebase#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected SignUpWithFirebase() {
        super(MerchantApi.this, "POST", REST_PATH, null, Void.class);
      }

      @Override
      public SignUpWithFirebase setAlt(java.lang.String alt) {
        return (SignUpWithFirebase) super.setAlt(alt);
      }

      @Override
      public SignUpWithFirebase setFields(java.lang.String fields) {
        return (SignUpWithFirebase) super.setFields(fields);
      }

      @Override
      public SignUpWithFirebase setKey(java.lang.String key) {
        return (SignUpWithFirebase) super.setKey(key);
      }

      @Override
      public SignUpWithFirebase setOauthToken(java.lang.String oauthToken) {
        return (SignUpWithFirebase) super.setOauthToken(oauthToken);
      }

      @Override
      public SignUpWithFirebase setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignUpWithFirebase) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignUpWithFirebase setQuotaUser(java.lang.String quotaUser) {
        return (SignUpWithFirebase) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignUpWithFirebase setUserIp(java.lang.String userIp) {
        return (SignUpWithFirebase) super.setUserIp(userIp);
      }

      @Override
      public SignUpWithFirebase set(String parameterName, Object value) {
        return (SignUpWithFirebase) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "addCategoryToMerchant".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link AddCategoryToMerchant#execute()} method to invoke the remote
   * operation.
   *
   * @param merchantID
   * @param categoryID
   * @return the request
   */
  public AddCategoryToMerchant addCategoryToMerchant(java.lang.Long merchantID, java.lang.Long categoryID) throws java.io.IOException {
    AddCategoryToMerchant result = new AddCategoryToMerchant(merchantID, categoryID);
    initialize(result);
    return result;
  }

  public class AddCategoryToMerchant extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Merchant> {

    private static final String REST_PATH = "addCategoryToMerchant/{merchantID}/{categoryID}";

    /**
     * Create a request for the method "addCategoryToMerchant".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link AddCategoryToMerchant#execute()} method to invoke the
     * remote operation. <p> {@link AddCategoryToMerchant#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param merchantID
     * @param categoryID
     * @since 1.13
     */
    protected AddCategoryToMerchant(java.lang.Long merchantID, java.lang.Long categoryID) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Merchant.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
    }

    @Override
    public AddCategoryToMerchant setAlt(java.lang.String alt) {
      return (AddCategoryToMerchant) super.setAlt(alt);
    }

    @Override
    public AddCategoryToMerchant setFields(java.lang.String fields) {
      return (AddCategoryToMerchant) super.setFields(fields);
    }

    @Override
    public AddCategoryToMerchant setKey(java.lang.String key) {
      return (AddCategoryToMerchant) super.setKey(key);
    }

    @Override
    public AddCategoryToMerchant setOauthToken(java.lang.String oauthToken) {
      return (AddCategoryToMerchant) super.setOauthToken(oauthToken);
    }

    @Override
    public AddCategoryToMerchant setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddCategoryToMerchant) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddCategoryToMerchant setQuotaUser(java.lang.String quotaUser) {
      return (AddCategoryToMerchant) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddCategoryToMerchant setUserIp(java.lang.String userIp) {
      return (AddCategoryToMerchant) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public AddCategoryToMerchant setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public AddCategoryToMerchant setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @Override
    public AddCategoryToMerchant set(String parameterName, Object value) {
      return (AddCategoryToMerchant) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addChoiceToOption".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link AddChoiceToOption#execute()} method to invoke the remote operation.
   *
   * @param optionID
   * @param choiceID
   * @return the request
   */
  public AddChoiceToOption addChoiceToOption(java.lang.Long optionID, java.lang.Long choiceID) throws java.io.IOException {
    AddChoiceToOption result = new AddChoiceToOption(optionID, choiceID);
    initialize(result);
    return result;
  }

  public class AddChoiceToOption extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Option> {

    private static final String REST_PATH = "addChoiceToOption/{optionID}/{choiceID}";

    /**
     * Create a request for the method "addChoiceToOption".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link AddChoiceToOption#execute()} method to invoke the remote
     * operation. <p> {@link AddChoiceToOption#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param optionID
     * @param choiceID
     * @since 1.13
     */
    protected AddChoiceToOption(java.lang.Long optionID, java.lang.Long choiceID) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Option.class);
      this.optionID = com.google.api.client.util.Preconditions.checkNotNull(optionID, "Required parameter optionID must be specified.");
      this.choiceID = com.google.api.client.util.Preconditions.checkNotNull(choiceID, "Required parameter choiceID must be specified.");
    }

    @Override
    public AddChoiceToOption setAlt(java.lang.String alt) {
      return (AddChoiceToOption) super.setAlt(alt);
    }

    @Override
    public AddChoiceToOption setFields(java.lang.String fields) {
      return (AddChoiceToOption) super.setFields(fields);
    }

    @Override
    public AddChoiceToOption setKey(java.lang.String key) {
      return (AddChoiceToOption) super.setKey(key);
    }

    @Override
    public AddChoiceToOption setOauthToken(java.lang.String oauthToken) {
      return (AddChoiceToOption) super.setOauthToken(oauthToken);
    }

    @Override
    public AddChoiceToOption setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddChoiceToOption) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddChoiceToOption setQuotaUser(java.lang.String quotaUser) {
      return (AddChoiceToOption) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddChoiceToOption setUserIp(java.lang.String userIp) {
      return (AddChoiceToOption) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long optionID;

    /**

     */
    public java.lang.Long getOptionID() {
      return optionID;
    }

    public AddChoiceToOption setOptionID(java.lang.Long optionID) {
      this.optionID = optionID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long choiceID;

    /**

     */
    public java.lang.Long getChoiceID() {
      return choiceID;
    }

    public AddChoiceToOption setChoiceID(java.lang.Long choiceID) {
      this.choiceID = choiceID;
      return this;
    }

    @Override
    public AddChoiceToOption set(String parameterName, Object value) {
      return (AddChoiceToOption) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addItemToCategory".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link AddItemToCategory#execute()} method to invoke the remote operation.
   *
   * @param categoryID
   * @param itemID
   * @return the request
   */
  public AddItemToCategory addItemToCategory(java.lang.Long categoryID, java.lang.Long itemID) throws java.io.IOException {
    AddItemToCategory result = new AddItemToCategory(categoryID, itemID);
    initialize(result);
    return result;
  }

  public class AddItemToCategory extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Category> {

    private static final String REST_PATH = "addItemToCategory/{categoryID}/{itemID}";

    /**
     * Create a request for the method "addItemToCategory".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link AddItemToCategory#execute()} method to invoke the remote
     * operation. <p> {@link AddItemToCategory#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param categoryID
     * @param itemID
     * @since 1.13
     */
    protected AddItemToCategory(java.lang.Long categoryID, java.lang.Long itemID) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Category.class);
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
      this.itemID = com.google.api.client.util.Preconditions.checkNotNull(itemID, "Required parameter itemID must be specified.");
    }

    @Override
    public AddItemToCategory setAlt(java.lang.String alt) {
      return (AddItemToCategory) super.setAlt(alt);
    }

    @Override
    public AddItemToCategory setFields(java.lang.String fields) {
      return (AddItemToCategory) super.setFields(fields);
    }

    @Override
    public AddItemToCategory setKey(java.lang.String key) {
      return (AddItemToCategory) super.setKey(key);
    }

    @Override
    public AddItemToCategory setOauthToken(java.lang.String oauthToken) {
      return (AddItemToCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public AddItemToCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddItemToCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddItemToCategory setQuotaUser(java.lang.String quotaUser) {
      return (AddItemToCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddItemToCategory setUserIp(java.lang.String userIp) {
      return (AddItemToCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public AddItemToCategory setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemID;

    /**

     */
    public java.lang.Long getItemID() {
      return itemID;
    }

    public AddItemToCategory setItemID(java.lang.Long itemID) {
      this.itemID = itemID;
      return this;
    }

    @Override
    public AddItemToCategory set(String parameterName, Object value) {
      return (AddItemToCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addOptionToItem".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link AddOptionToItem#execute()} method to invoke the remote operation.
   *
   * @param itemID
   * @param optionID
   * @return the request
   */
  public AddOptionToItem addOptionToItem(java.lang.Long itemID, java.lang.Long optionID) throws java.io.IOException {
    AddOptionToItem result = new AddOptionToItem(itemID, optionID);
    initialize(result);
    return result;
  }

  public class AddOptionToItem extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Item> {

    private static final String REST_PATH = "addOptionTotItem/{itemID}/{optionID}";

    /**
     * Create a request for the method "addOptionToItem".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link AddOptionToItem#execute()} method to invoke the remote
     * operation. <p> {@link AddOptionToItem#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param itemID
     * @param optionID
     * @since 1.13
     */
    protected AddOptionToItem(java.lang.Long itemID, java.lang.Long optionID) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Item.class);
      this.itemID = com.google.api.client.util.Preconditions.checkNotNull(itemID, "Required parameter itemID must be specified.");
      this.optionID = com.google.api.client.util.Preconditions.checkNotNull(optionID, "Required parameter optionID must be specified.");
    }

    @Override
    public AddOptionToItem setAlt(java.lang.String alt) {
      return (AddOptionToItem) super.setAlt(alt);
    }

    @Override
    public AddOptionToItem setFields(java.lang.String fields) {
      return (AddOptionToItem) super.setFields(fields);
    }

    @Override
    public AddOptionToItem setKey(java.lang.String key) {
      return (AddOptionToItem) super.setKey(key);
    }

    @Override
    public AddOptionToItem setOauthToken(java.lang.String oauthToken) {
      return (AddOptionToItem) super.setOauthToken(oauthToken);
    }

    @Override
    public AddOptionToItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddOptionToItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddOptionToItem setQuotaUser(java.lang.String quotaUser) {
      return (AddOptionToItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddOptionToItem setUserIp(java.lang.String userIp) {
      return (AddOptionToItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemID;

    /**

     */
    public java.lang.Long getItemID() {
      return itemID;
    }

    public AddOptionToItem setItemID(java.lang.Long itemID) {
      this.itemID = itemID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long optionID;

    /**

     */
    public java.lang.Long getOptionID() {
      return optionID;
    }

    public AddOptionToItem setOptionID(java.lang.Long optionID) {
      this.optionID = optionID;
      return this;
    }

    @Override
    public AddOptionToItem set(String parameterName, Object value) {
      return (AddOptionToItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createCategory".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateCategory#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param description
   * @param imageURL
   * @return the request
   */
  public CreateCategory createCategory(java.lang.String name, java.lang.String description, java.lang.String imageURL) throws java.io.IOException {
    CreateCategory result = new CreateCategory(name, description, imageURL);
    initialize(result);
    return result;
  }

  public class CreateCategory extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Category> {

    private static final String REST_PATH = "createCategory/{name}/{description}/{imageURL}";

    /**
     * Create a request for the method "createCategory".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateCategory#execute()} method to invoke the remote
     * operation. <p> {@link CreateCategory#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param name
     * @param description
     * @param imageURL
     * @since 1.13
     */
    protected CreateCategory(java.lang.String name, java.lang.String description, java.lang.String imageURL) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Category.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateCategory setAlt(java.lang.String alt) {
      return (CreateCategory) super.setAlt(alt);
    }

    @Override
    public CreateCategory setFields(java.lang.String fields) {
      return (CreateCategory) super.setFields(fields);
    }

    @Override
    public CreateCategory setKey(java.lang.String key) {
      return (CreateCategory) super.setKey(key);
    }

    @Override
    public CreateCategory setOauthToken(java.lang.String oauthToken) {
      return (CreateCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateCategory setQuotaUser(java.lang.String quotaUser) {
      return (CreateCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateCategory setUserIp(java.lang.String userIp) {
      return (CreateCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateCategory setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateCategory setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateCategory setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateCategory set(String parameterName, Object value) {
      return (CreateCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createChoice".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateChoice#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param addedPrice
   * @param description
   * @return the request
   */
  public CreateChoice createChoice(java.lang.String name, java.lang.Double addedPrice, java.lang.String description) throws java.io.IOException {
    CreateChoice result = new CreateChoice(name, addedPrice, description);
    initialize(result);
    return result;
  }

  public class CreateChoice extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Choice> {

    private static final String REST_PATH = "createChoice/{name}/{addedPrice}/{description}";

    /**
     * Create a request for the method "createChoice".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateChoice#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateChoice#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param addedPrice
     * @param description
     * @since 1.13
     */
    protected CreateChoice(java.lang.String name, java.lang.Double addedPrice, java.lang.String description) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Choice.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.addedPrice = com.google.api.client.util.Preconditions.checkNotNull(addedPrice, "Required parameter addedPrice must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
    }

    @Override
    public CreateChoice setAlt(java.lang.String alt) {
      return (CreateChoice) super.setAlt(alt);
    }

    @Override
    public CreateChoice setFields(java.lang.String fields) {
      return (CreateChoice) super.setFields(fields);
    }

    @Override
    public CreateChoice setKey(java.lang.String key) {
      return (CreateChoice) super.setKey(key);
    }

    @Override
    public CreateChoice setOauthToken(java.lang.String oauthToken) {
      return (CreateChoice) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateChoice setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateChoice) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateChoice setQuotaUser(java.lang.String quotaUser) {
      return (CreateChoice) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateChoice setUserIp(java.lang.String userIp) {
      return (CreateChoice) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateChoice setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double addedPrice;

    /**

     */
    public java.lang.Double getAddedPrice() {
      return addedPrice;
    }

    public CreateChoice setAddedPrice(java.lang.Double addedPrice) {
      this.addedPrice = addedPrice;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateChoice setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @Override
    public CreateChoice set(String parameterName, Object value) {
      return (CreateChoice) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createDessertMerchant".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateDessertMerchant#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreateDessertMerchant createDessertMerchant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreateDessertMerchant result = new CreateDessertMerchant(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreateDessertMerchant extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.DessertsMerchant> {

    private static final String REST_PATH = "createDessertsMerchant/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createDessertMerchant".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateDessertMerchant#execute()} method to invoke the
     * remote operation. <p> {@link CreateDessertMerchant#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreateDessertMerchant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.DessertsMerchant.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateDessertMerchant setAlt(java.lang.String alt) {
      return (CreateDessertMerchant) super.setAlt(alt);
    }

    @Override
    public CreateDessertMerchant setFields(java.lang.String fields) {
      return (CreateDessertMerchant) super.setFields(fields);
    }

    @Override
    public CreateDessertMerchant setKey(java.lang.String key) {
      return (CreateDessertMerchant) super.setKey(key);
    }

    @Override
    public CreateDessertMerchant setOauthToken(java.lang.String oauthToken) {
      return (CreateDessertMerchant) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateDessertMerchant setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateDessertMerchant) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateDessertMerchant setQuotaUser(java.lang.String quotaUser) {
      return (CreateDessertMerchant) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateDessertMerchant setUserIp(java.lang.String userIp) {
      return (CreateDessertMerchant) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateDessertMerchant setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateDessertMerchant setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateDessertMerchant setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateDessertMerchant setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateDessertMerchant set(String parameterName, Object value) {
      return (CreateDessertMerchant) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createDessertsMerchantItem".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateDessertsMerchantItem#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreateDessertsMerchantItem createDessertsMerchantItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreateDessertsMerchantItem result = new CreateDessertsMerchantItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreateDessertsMerchantItem extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.DessertsMerchantItem> {

    private static final String REST_PATH = "createDessertsMerchantItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createDessertsMerchantItem".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateDessertsMerchantItem#execute()} method to invoke the
     * remote operation. <p> {@link CreateDessertsMerchantItem#initialize(com.google.api.client.google
     * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreateDessertsMerchantItem(java.lang.String name, java.lang.Double basePrice) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.DessertsMerchantItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreateDessertsMerchantItem setAlt(java.lang.String alt) {
      return (CreateDessertsMerchantItem) super.setAlt(alt);
    }

    @Override
    public CreateDessertsMerchantItem setFields(java.lang.String fields) {
      return (CreateDessertsMerchantItem) super.setFields(fields);
    }

    @Override
    public CreateDessertsMerchantItem setKey(java.lang.String key) {
      return (CreateDessertsMerchantItem) super.setKey(key);
    }

    @Override
    public CreateDessertsMerchantItem setOauthToken(java.lang.String oauthToken) {
      return (CreateDessertsMerchantItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateDessertsMerchantItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateDessertsMerchantItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateDessertsMerchantItem setQuotaUser(java.lang.String quotaUser) {
      return (CreateDessertsMerchantItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateDessertsMerchantItem setUserIp(java.lang.String userIp) {
      return (CreateDessertsMerchantItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateDessertsMerchantItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreateDessertsMerchantItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreateDessertsMerchantItem set(String parameterName, Object value) {
      return (CreateDessertsMerchantItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createOption".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateOption#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param required
   * @param description
   * @return the request
   */
  public CreateOption createOption(java.lang.String name, java.lang.Boolean required, java.lang.String description) throws java.io.IOException {
    CreateOption result = new CreateOption(name, required, description);
    initialize(result);
    return result;
  }

  public class CreateOption extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Option> {

    private static final String REST_PATH = "createOption/{name}/{required}/{description}";

    /**
     * Create a request for the method "createOption".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateOption#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateOption#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param required
     * @param description
     * @since 1.13
     */
    protected CreateOption(java.lang.String name, java.lang.Boolean required, java.lang.String description) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Option.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.required = com.google.api.client.util.Preconditions.checkNotNull(required, "Required parameter required must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
    }

    @Override
    public CreateOption setAlt(java.lang.String alt) {
      return (CreateOption) super.setAlt(alt);
    }

    @Override
    public CreateOption setFields(java.lang.String fields) {
      return (CreateOption) super.setFields(fields);
    }

    @Override
    public CreateOption setKey(java.lang.String key) {
      return (CreateOption) super.setKey(key);
    }

    @Override
    public CreateOption setOauthToken(java.lang.String oauthToken) {
      return (CreateOption) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateOption setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateOption) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateOption setQuotaUser(java.lang.String quotaUser) {
      return (CreateOption) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateOption setUserIp(java.lang.String userIp) {
      return (CreateOption) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateOption setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean required;

    /**

     */
    public java.lang.Boolean getRequired() {
      return required;
    }

    public CreateOption setRequired(java.lang.Boolean required) {
      this.required = required;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateOption setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @Override
    public CreateOption set(String parameterName, Object value) {
      return (CreateOption) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createPharmacy".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreatePharmacy#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreatePharmacy createPharmacy(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreatePharmacy result = new CreatePharmacy(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreatePharmacy extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Pharmacy> {

    private static final String REST_PATH = "createPharmacy/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createPharmacy".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreatePharmacy#execute()} method to invoke the remote
     * operation. <p> {@link CreatePharmacy#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreatePharmacy(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Pharmacy.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreatePharmacy setAlt(java.lang.String alt) {
      return (CreatePharmacy) super.setAlt(alt);
    }

    @Override
    public CreatePharmacy setFields(java.lang.String fields) {
      return (CreatePharmacy) super.setFields(fields);
    }

    @Override
    public CreatePharmacy setKey(java.lang.String key) {
      return (CreatePharmacy) super.setKey(key);
    }

    @Override
    public CreatePharmacy setOauthToken(java.lang.String oauthToken) {
      return (CreatePharmacy) super.setOauthToken(oauthToken);
    }

    @Override
    public CreatePharmacy setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreatePharmacy) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreatePharmacy setQuotaUser(java.lang.String quotaUser) {
      return (CreatePharmacy) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreatePharmacy setUserIp(java.lang.String userIp) {
      return (CreatePharmacy) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreatePharmacy setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreatePharmacy setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreatePharmacy setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreatePharmacy setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreatePharmacy set(String parameterName, Object value) {
      return (CreatePharmacy) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createPharmacyItem".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreatePharmacyItem#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreatePharmacyItem createPharmacyItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreatePharmacyItem result = new CreatePharmacyItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreatePharmacyItem extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.PharmacyItem> {

    private static final String REST_PATH = "createPharmacyItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createPharmacyItem".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreatePharmacyItem#execute()} method to invoke the remote
     * operation. <p> {@link CreatePharmacyItem#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreatePharmacyItem(java.lang.String name, java.lang.Double basePrice) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.PharmacyItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreatePharmacyItem setAlt(java.lang.String alt) {
      return (CreatePharmacyItem) super.setAlt(alt);
    }

    @Override
    public CreatePharmacyItem setFields(java.lang.String fields) {
      return (CreatePharmacyItem) super.setFields(fields);
    }

    @Override
    public CreatePharmacyItem setKey(java.lang.String key) {
      return (CreatePharmacyItem) super.setKey(key);
    }

    @Override
    public CreatePharmacyItem setOauthToken(java.lang.String oauthToken) {
      return (CreatePharmacyItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreatePharmacyItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreatePharmacyItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreatePharmacyItem setQuotaUser(java.lang.String quotaUser) {
      return (CreatePharmacyItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreatePharmacyItem setUserIp(java.lang.String userIp) {
      return (CreatePharmacyItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreatePharmacyItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreatePharmacyItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreatePharmacyItem set(String parameterName, Object value) {
      return (CreatePharmacyItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createRandomMerchants".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateRandomMerchants#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public CreateRandomMerchants createRandomMerchants() throws java.io.IOException {
    CreateRandomMerchants result = new CreateRandomMerchants();
    initialize(result);
    return result;
  }

  public class CreateRandomMerchants extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.MerchantCollection> {

    private static final String REST_PATH = "createRandomMerchants";

    /**
     * Create a request for the method "createRandomMerchants".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateRandomMerchants#execute()} method to invoke the
     * remote operation. <p> {@link CreateRandomMerchants#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected CreateRandomMerchants() {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.MerchantCollection.class);
    }

    @Override
    public CreateRandomMerchants setAlt(java.lang.String alt) {
      return (CreateRandomMerchants) super.setAlt(alt);
    }

    @Override
    public CreateRandomMerchants setFields(java.lang.String fields) {
      return (CreateRandomMerchants) super.setFields(fields);
    }

    @Override
    public CreateRandomMerchants setKey(java.lang.String key) {
      return (CreateRandomMerchants) super.setKey(key);
    }

    @Override
    public CreateRandomMerchants setOauthToken(java.lang.String oauthToken) {
      return (CreateRandomMerchants) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateRandomMerchants setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateRandomMerchants) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateRandomMerchants setQuotaUser(java.lang.String quotaUser) {
      return (CreateRandomMerchants) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateRandomMerchants setUserIp(java.lang.String userIp) {
      return (CreateRandomMerchants) super.setUserIp(userIp);
    }

    @Override
    public CreateRandomMerchants set(String parameterName, Object value) {
      return (CreateRandomMerchants) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createRestaurant".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateRestaurant#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreateRestaurant createRestaurant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreateRestaurant result = new CreateRestaurant(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreateRestaurant extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Restaurant> {

    private static final String REST_PATH = "createRestaurant/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createRestaurant".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateRestaurant#execute()} method to invoke the remote
     * operation. <p> {@link CreateRestaurant#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreateRestaurant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Restaurant.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateRestaurant setAlt(java.lang.String alt) {
      return (CreateRestaurant) super.setAlt(alt);
    }

    @Override
    public CreateRestaurant setFields(java.lang.String fields) {
      return (CreateRestaurant) super.setFields(fields);
    }

    @Override
    public CreateRestaurant setKey(java.lang.String key) {
      return (CreateRestaurant) super.setKey(key);
    }

    @Override
    public CreateRestaurant setOauthToken(java.lang.String oauthToken) {
      return (CreateRestaurant) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateRestaurant setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateRestaurant) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateRestaurant setQuotaUser(java.lang.String quotaUser) {
      return (CreateRestaurant) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateRestaurant setUserIp(java.lang.String userIp) {
      return (CreateRestaurant) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateRestaurant setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateRestaurant setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateRestaurant setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateRestaurant setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateRestaurant set(String parameterName, Object value) {
      return (CreateRestaurant) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createRestaurantItem".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateRestaurantItem#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreateRestaurantItem createRestaurantItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreateRestaurantItem result = new CreateRestaurantItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreateRestaurantItem extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.RestaurantItem> {

    private static final String REST_PATH = "createRestaurantItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createRestaurantItem".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateRestaurantItem#execute()} method to invoke the
     * remote operation. <p> {@link CreateRestaurantItem#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreateRestaurantItem(java.lang.String name, java.lang.Double basePrice) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.RestaurantItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreateRestaurantItem setAlt(java.lang.String alt) {
      return (CreateRestaurantItem) super.setAlt(alt);
    }

    @Override
    public CreateRestaurantItem setFields(java.lang.String fields) {
      return (CreateRestaurantItem) super.setFields(fields);
    }

    @Override
    public CreateRestaurantItem setKey(java.lang.String key) {
      return (CreateRestaurantItem) super.setKey(key);
    }

    @Override
    public CreateRestaurantItem setOauthToken(java.lang.String oauthToken) {
      return (CreateRestaurantItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateRestaurantItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateRestaurantItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateRestaurantItem setQuotaUser(java.lang.String quotaUser) {
      return (CreateRestaurantItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateRestaurantItem setUserIp(java.lang.String userIp) {
      return (CreateRestaurantItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateRestaurantItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreateRestaurantItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreateRestaurantItem set(String parameterName, Object value) {
      return (CreateRestaurantItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createSpecialMerchant".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateSpecialMerchant#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreateSpecialMerchant createSpecialMerchant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreateSpecialMerchant result = new CreateSpecialMerchant(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreateSpecialMerchant extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.SpecialMerchant> {

    private static final String REST_PATH = "createSpecialMerchant/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createSpecialMerchant".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateSpecialMerchant#execute()} method to invoke the
     * remote operation. <p> {@link CreateSpecialMerchant#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreateSpecialMerchant(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.SpecialMerchant.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateSpecialMerchant setAlt(java.lang.String alt) {
      return (CreateSpecialMerchant) super.setAlt(alt);
    }

    @Override
    public CreateSpecialMerchant setFields(java.lang.String fields) {
      return (CreateSpecialMerchant) super.setFields(fields);
    }

    @Override
    public CreateSpecialMerchant setKey(java.lang.String key) {
      return (CreateSpecialMerchant) super.setKey(key);
    }

    @Override
    public CreateSpecialMerchant setOauthToken(java.lang.String oauthToken) {
      return (CreateSpecialMerchant) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateSpecialMerchant setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateSpecialMerchant) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateSpecialMerchant setQuotaUser(java.lang.String quotaUser) {
      return (CreateSpecialMerchant) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateSpecialMerchant setUserIp(java.lang.String userIp) {
      return (CreateSpecialMerchant) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateSpecialMerchant setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateSpecialMerchant setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateSpecialMerchant setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateSpecialMerchant setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateSpecialMerchant set(String parameterName, Object value) {
      return (CreateSpecialMerchant) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createSpecialMerchantItem".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateSpecialMerchantItem#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreateSpecialMerchantItem createSpecialMerchantItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreateSpecialMerchantItem result = new CreateSpecialMerchantItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreateSpecialMerchantItem extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.SpecialMerchantItem> {

    private static final String REST_PATH = "createSpecialMerchantItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createSpecialMerchantItem".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateSpecialMerchantItem#execute()} method to invoke the
     * remote operation. <p> {@link CreateSpecialMerchantItem#initialize(com.google.api.client.googlea
     * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreateSpecialMerchantItem(java.lang.String name, java.lang.Double basePrice) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.SpecialMerchantItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreateSpecialMerchantItem setAlt(java.lang.String alt) {
      return (CreateSpecialMerchantItem) super.setAlt(alt);
    }

    @Override
    public CreateSpecialMerchantItem setFields(java.lang.String fields) {
      return (CreateSpecialMerchantItem) super.setFields(fields);
    }

    @Override
    public CreateSpecialMerchantItem setKey(java.lang.String key) {
      return (CreateSpecialMerchantItem) super.setKey(key);
    }

    @Override
    public CreateSpecialMerchantItem setOauthToken(java.lang.String oauthToken) {
      return (CreateSpecialMerchantItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateSpecialMerchantItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateSpecialMerchantItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateSpecialMerchantItem setQuotaUser(java.lang.String quotaUser) {
      return (CreateSpecialMerchantItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateSpecialMerchantItem setUserIp(java.lang.String userIp) {
      return (CreateSpecialMerchantItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateSpecialMerchantItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreateSpecialMerchantItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreateSpecialMerchantItem set(String parameterName, Object value) {
      return (CreateSpecialMerchantItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createSuperMarket".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateSuperMarket#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param imageURL
   * @return the request
   */
  public CreateSuperMarket createSuperMarket(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) throws java.io.IOException {
    CreateSuperMarket result = new CreateSuperMarket(name, email, phone, imageURL);
    initialize(result);
    return result;
  }

  public class CreateSuperMarket extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.SuperMarket> {

    private static final String REST_PATH = "createSuperMarket/{name}/{email}/{phone}/{imageURL}";

    /**
     * Create a request for the method "createSuperMarket".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateSuperMarket#execute()} method to invoke the remote
     * operation. <p> {@link CreateSuperMarket#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param imageURL
     * @since 1.13
     */
    protected CreateSuperMarket(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String imageURL) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.SuperMarket.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
    }

    @Override
    public CreateSuperMarket setAlt(java.lang.String alt) {
      return (CreateSuperMarket) super.setAlt(alt);
    }

    @Override
    public CreateSuperMarket setFields(java.lang.String fields) {
      return (CreateSuperMarket) super.setFields(fields);
    }

    @Override
    public CreateSuperMarket setKey(java.lang.String key) {
      return (CreateSuperMarket) super.setKey(key);
    }

    @Override
    public CreateSuperMarket setOauthToken(java.lang.String oauthToken) {
      return (CreateSuperMarket) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateSuperMarket setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateSuperMarket) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateSuperMarket setQuotaUser(java.lang.String quotaUser) {
      return (CreateSuperMarket) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateSuperMarket setUserIp(java.lang.String userIp) {
      return (CreateSuperMarket) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateSuperMarket setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateSuperMarket setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateSuperMarket setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateSuperMarket setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public CreateSuperMarket set(String parameterName, Object value) {
      return (CreateSuperMarket) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createSuperMarketItem".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateSuperMarketItem#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param basePrice
   * @return the request
   */
  public CreateSuperMarketItem createSuperMarketItem(java.lang.String name, java.lang.Double basePrice) throws java.io.IOException {
    CreateSuperMarketItem result = new CreateSuperMarketItem(name, basePrice);
    initialize(result);
    return result;
  }

  public class CreateSuperMarketItem extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.SuperMarketItem> {

    private static final String REST_PATH = "createSuperMarketItem/{name}/{basePrice}";

    /**
     * Create a request for the method "createSuperMarketItem".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateSuperMarketItem#execute()} method to invoke the
     * remote operation. <p> {@link CreateSuperMarketItem#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param name
     * @param basePrice
     * @since 1.13
     */
    protected CreateSuperMarketItem(java.lang.String name, java.lang.Double basePrice) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.SuperMarketItem.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.basePrice = com.google.api.client.util.Preconditions.checkNotNull(basePrice, "Required parameter basePrice must be specified.");
    }

    @Override
    public CreateSuperMarketItem setAlt(java.lang.String alt) {
      return (CreateSuperMarketItem) super.setAlt(alt);
    }

    @Override
    public CreateSuperMarketItem setFields(java.lang.String fields) {
      return (CreateSuperMarketItem) super.setFields(fields);
    }

    @Override
    public CreateSuperMarketItem setKey(java.lang.String key) {
      return (CreateSuperMarketItem) super.setKey(key);
    }

    @Override
    public CreateSuperMarketItem setOauthToken(java.lang.String oauthToken) {
      return (CreateSuperMarketItem) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateSuperMarketItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateSuperMarketItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateSuperMarketItem setQuotaUser(java.lang.String quotaUser) {
      return (CreateSuperMarketItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateSuperMarketItem setUserIp(java.lang.String userIp) {
      return (CreateSuperMarketItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateSuperMarketItem setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double basePrice;

    /**

     */
    public java.lang.Double getBasePrice() {
      return basePrice;
    }

    public CreateSuperMarketItem setBasePrice(java.lang.Double basePrice) {
      this.basePrice = basePrice;
      return this;
    }

    @Override
    public CreateSuperMarketItem set(String parameterName, Object value) {
      return (CreateSuperMarketItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createTestEntity".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link CreateTestEntity#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public CreateTestEntity createTestEntity(java.lang.String name) throws java.io.IOException {
    CreateTestEntity result = new CreateTestEntity(name);
    initialize(result);
    return result;
  }

  public class CreateTestEntity extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.TestEntity> {

    private static final String REST_PATH = "createTestEntity/{name}";

    /**
     * Create a request for the method "createTestEntity".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link CreateTestEntity#execute()} method to invoke the remote
     * operation. <p> {@link CreateTestEntity#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected CreateTestEntity(java.lang.String name) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.TestEntity.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public CreateTestEntity setAlt(java.lang.String alt) {
      return (CreateTestEntity) super.setAlt(alt);
    }

    @Override
    public CreateTestEntity setFields(java.lang.String fields) {
      return (CreateTestEntity) super.setFields(fields);
    }

    @Override
    public CreateTestEntity setKey(java.lang.String key) {
      return (CreateTestEntity) super.setKey(key);
    }

    @Override
    public CreateTestEntity setOauthToken(java.lang.String oauthToken) {
      return (CreateTestEntity) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateTestEntity setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateTestEntity) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateTestEntity setQuotaUser(java.lang.String quotaUser) {
      return (CreateTestEntity) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateTestEntity setUserIp(java.lang.String userIp) {
      return (CreateTestEntity) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateTestEntity setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public CreateTestEntity set(String parameterName, Object value) {
      return (CreateTestEntity) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDeliveryRequestByID".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link GetDeliveryRequestByID#execute()} method to invoke the remote
   * operation.
   *
   * @param deliveryRequestID
   * @return the request
   */
  public GetDeliveryRequestByID getDeliveryRequestByID(java.lang.Long deliveryRequestID) throws java.io.IOException {
    GetDeliveryRequestByID result = new GetDeliveryRequestByID(deliveryRequestID);
    initialize(result);
    return result;
  }

  public class GetDeliveryRequestByID extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.DeliveryRequest> {

    private static final String REST_PATH = "deliveryrequest/{deliveryRequestID}";

    /**
     * Create a request for the method "getDeliveryRequestByID".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link GetDeliveryRequestByID#execute()} method to invoke the
     * remote operation. <p> {@link GetDeliveryRequestByID#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param deliveryRequestID
     * @since 1.13
     */
    protected GetDeliveryRequestByID(java.lang.Long deliveryRequestID) {
      super(MerchantApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.DeliveryRequest.class);
      this.deliveryRequestID = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestID, "Required parameter deliveryRequestID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDeliveryRequestByID setAlt(java.lang.String alt) {
      return (GetDeliveryRequestByID) super.setAlt(alt);
    }

    @Override
    public GetDeliveryRequestByID setFields(java.lang.String fields) {
      return (GetDeliveryRequestByID) super.setFields(fields);
    }

    @Override
    public GetDeliveryRequestByID setKey(java.lang.String key) {
      return (GetDeliveryRequestByID) super.setKey(key);
    }

    @Override
    public GetDeliveryRequestByID setOauthToken(java.lang.String oauthToken) {
      return (GetDeliveryRequestByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDeliveryRequestByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDeliveryRequestByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDeliveryRequestByID setQuotaUser(java.lang.String quotaUser) {
      return (GetDeliveryRequestByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDeliveryRequestByID setUserIp(java.lang.String userIp) {
      return (GetDeliveryRequestByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long deliveryRequestID;

    /**

     */
    public java.lang.Long getDeliveryRequestID() {
      return deliveryRequestID;
    }

    public GetDeliveryRequestByID setDeliveryRequestID(java.lang.Long deliveryRequestID) {
      this.deliveryRequestID = deliveryRequestID;
      return this;
    }

    @Override
    public GetDeliveryRequestByID set(String parameterName, Object value) {
      return (GetDeliveryRequestByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getItemsOfCategoryByID".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link GetItemsOfCategoryByID#execute()} method to invoke the remote
   * operation.
   *
   * @param categoryID
   * @return the request
   */
  public GetItemsOfCategoryByID getItemsOfCategoryByID(java.lang.Long categoryID) throws java.io.IOException {
    GetItemsOfCategoryByID result = new GetItemsOfCategoryByID(categoryID);
    initialize(result);
    return result;
  }

  public class GetItemsOfCategoryByID extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.ItemCollection> {

    private static final String REST_PATH = "itemcollection/{categoryID}";

    /**
     * Create a request for the method "getItemsOfCategoryByID".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link GetItemsOfCategoryByID#execute()} method to invoke the
     * remote operation. <p> {@link GetItemsOfCategoryByID#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param categoryID
     * @since 1.13
     */
    protected GetItemsOfCategoryByID(java.lang.Long categoryID) {
      super(MerchantApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.ItemCollection.class);
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItemsOfCategoryByID setAlt(java.lang.String alt) {
      return (GetItemsOfCategoryByID) super.setAlt(alt);
    }

    @Override
    public GetItemsOfCategoryByID setFields(java.lang.String fields) {
      return (GetItemsOfCategoryByID) super.setFields(fields);
    }

    @Override
    public GetItemsOfCategoryByID setKey(java.lang.String key) {
      return (GetItemsOfCategoryByID) super.setKey(key);
    }

    @Override
    public GetItemsOfCategoryByID setOauthToken(java.lang.String oauthToken) {
      return (GetItemsOfCategoryByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItemsOfCategoryByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItemsOfCategoryByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItemsOfCategoryByID setQuotaUser(java.lang.String quotaUser) {
      return (GetItemsOfCategoryByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItemsOfCategoryByID setUserIp(java.lang.String userIp) {
      return (GetItemsOfCategoryByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public GetItemsOfCategoryByID setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @Override
    public GetItemsOfCategoryByID set(String parameterName, Object value) {
      return (GetItemsOfCategoryByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantById".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link GetMerchantById#execute()} method to invoke the remote operation.
   *
   * @param merchantId
   * @return the request
   */
  public GetMerchantById getMerchantById(java.lang.Long merchantId) throws java.io.IOException {
    GetMerchantById result = new GetMerchantById(merchantId);
    initialize(result);
    return result;
  }

  public class GetMerchantById extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.Merchant> {

    private static final String REST_PATH = "merchant/{merchantId}";

    /**
     * Create a request for the method "getMerchantById".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link GetMerchantById#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantById#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param merchantId
     * @since 1.13
     */
    protected GetMerchantById(java.lang.Long merchantId) {
      super(MerchantApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.Merchant.class);
      this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantById setAlt(java.lang.String alt) {
      return (GetMerchantById) super.setAlt(alt);
    }

    @Override
    public GetMerchantById setFields(java.lang.String fields) {
      return (GetMerchantById) super.setFields(fields);
    }

    @Override
    public GetMerchantById setKey(java.lang.String key) {
      return (GetMerchantById) super.setKey(key);
    }

    @Override
    public GetMerchantById setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantById) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantById setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantById) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantById setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantById) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantById setUserIp(java.lang.String userIp) {
      return (GetMerchantById) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantId;

    /**

     */
    public java.lang.Long getMerchantId() {
      return merchantId;
    }

    public GetMerchantById setMerchantId(java.lang.Long merchantId) {
      this.merchantId = merchantId;
      return this;
    }

    @Override
    public GetMerchantById set(String parameterName, Object value) {
      return (GetMerchantById) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "merchantAcceptsDeliveryRequest".
   *
   * This request holds the parameters needed by the merchantApi server.  After setting any optional
   * parameters, call the {@link MerchantAcceptsDeliveryRequest#execute()} method to invoke the remote
   * operation.
   *
   * @param deliveryRequestID
   * @return the request
   */
  public MerchantAcceptsDeliveryRequest merchantAcceptsDeliveryRequest(java.lang.Long deliveryRequestID) throws java.io.IOException {
    MerchantAcceptsDeliveryRequest result = new MerchantAcceptsDeliveryRequest(deliveryRequestID);
    initialize(result);
    return result;
  }

  public class MerchantAcceptsDeliveryRequest extends MerchantApiRequest<com.appspot.myapplicationid.merchantApi.model.DeliveryRequest> {

    private static final String REST_PATH = "merchantAcceptsDeliveryRequest/{deliveryRequestID}";

    /**
     * Create a request for the method "merchantAcceptsDeliveryRequest".
     *
     * This request holds the parameters needed by the the merchantApi server.  After setting any
     * optional parameters, call the {@link MerchantAcceptsDeliveryRequest#execute()} method to invoke
     * the remote operation. <p> {@link MerchantAcceptsDeliveryRequest#initialize(com.google.api.clien
     * t.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param deliveryRequestID
     * @since 1.13
     */
    protected MerchantAcceptsDeliveryRequest(java.lang.Long deliveryRequestID) {
      super(MerchantApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.merchantApi.model.DeliveryRequest.class);
      this.deliveryRequestID = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestID, "Required parameter deliveryRequestID must be specified.");
    }

    @Override
    public MerchantAcceptsDeliveryRequest setAlt(java.lang.String alt) {
      return (MerchantAcceptsDeliveryRequest) super.setAlt(alt);
    }

    @Override
    public MerchantAcceptsDeliveryRequest setFields(java.lang.String fields) {
      return (MerchantAcceptsDeliveryRequest) super.setFields(fields);
    }

    @Override
    public MerchantAcceptsDeliveryRequest setKey(java.lang.String key) {
      return (MerchantAcceptsDeliveryRequest) super.setKey(key);
    }

    @Override
    public MerchantAcceptsDeliveryRequest setOauthToken(java.lang.String oauthToken) {
      return (MerchantAcceptsDeliveryRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public MerchantAcceptsDeliveryRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (MerchantAcceptsDeliveryRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public MerchantAcceptsDeliveryRequest setQuotaUser(java.lang.String quotaUser) {
      return (MerchantAcceptsDeliveryRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public MerchantAcceptsDeliveryRequest setUserIp(java.lang.String userIp) {
      return (MerchantAcceptsDeliveryRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long deliveryRequestID;

    /**

     */
    public java.lang.Long getDeliveryRequestID() {
      return deliveryRequestID;
    }

    public MerchantAcceptsDeliveryRequest setDeliveryRequestID(java.lang.Long deliveryRequestID) {
      this.deliveryRequestID = deliveryRequestID;
      return this;
    }

    @Override
    public MerchantAcceptsDeliveryRequest set(String parameterName, Object value) {
      return (MerchantAcceptsDeliveryRequest) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MerchantApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MerchantApi}. */
    @Override
    public MerchantApi build() {
      return new MerchantApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MerchantApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMerchantApiRequestInitializer(
        MerchantApiRequestInitializer merchantapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(merchantapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
