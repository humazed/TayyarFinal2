/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-09-05 21:06:36 UTC)
 * on 2017-09-20 at 22:54:58 UTC 
 * Modify at your own risk.
 */

package com.appspot.myapplicationid.customerApi;

/**
 * Service definition for CustomerApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CustomerApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CustomerApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the customerApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "customerApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CustomerApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CustomerApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "createCustomer".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link CreateCustomer#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param mainAddress
   * @param phone
   * @return the request
   */
  public CreateCustomer createCustomer(java.lang.String name, java.lang.String email, java.lang.String mainAddress, java.lang.String phone) throws java.io.IOException {
    CreateCustomer result = new CreateCustomer(name, email, mainAddress, phone);
    initialize(result);
    return result;
  }

  public class CreateCustomer extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.Customer> {

    private static final String REST_PATH = "createCustomer/{name}/{email}/{mainAddress}/{phone}";

    /**
     * Create a request for the method "createCustomer".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link CreateCustomer#execute()} method to invoke the remote
     * operation. <p> {@link CreateCustomer#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param name
     * @param email
     * @param mainAddress
     * @param phone
     * @since 1.13
     */
    protected CreateCustomer(java.lang.String name, java.lang.String email, java.lang.String mainAddress, java.lang.String phone) {
      super(CustomerApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.Customer.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.mainAddress = com.google.api.client.util.Preconditions.checkNotNull(mainAddress, "Required parameter mainAddress must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
    }

    @Override
    public CreateCustomer setAlt(java.lang.String alt) {
      return (CreateCustomer) super.setAlt(alt);
    }

    @Override
    public CreateCustomer setFields(java.lang.String fields) {
      return (CreateCustomer) super.setFields(fields);
    }

    @Override
    public CreateCustomer setKey(java.lang.String key) {
      return (CreateCustomer) super.setKey(key);
    }

    @Override
    public CreateCustomer setOauthToken(java.lang.String oauthToken) {
      return (CreateCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateCustomer setQuotaUser(java.lang.String quotaUser) {
      return (CreateCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateCustomer setUserIp(java.lang.String userIp) {
      return (CreateCustomer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateCustomer setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateCustomer setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String mainAddress;

    /**

     */
    public java.lang.String getMainAddress() {
      return mainAddress;
    }

    public CreateCustomer setMainAddress(java.lang.String mainAddress) {
      this.mainAddress = mainAddress;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateCustomer setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @Override
    public CreateCustomer set(String parameterName, Object value) {
      return (CreateCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createDeliveryRequest".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link CreateDeliveryRequest#execute()} method to invoke the remote
   * operation.
   *
   * @param customerID
   * @return the request
   */
  public CreateDeliveryRequest createDeliveryRequest(java.lang.Long customerID) throws java.io.IOException {
    CreateDeliveryRequest result = new CreateDeliveryRequest(customerID);
    initialize(result);
    return result;
  }

  public class CreateDeliveryRequest extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.DeliveryRequest> {

    private static final String REST_PATH = "createDeliveryRequest/{customerID}";

    /**
     * Create a request for the method "createDeliveryRequest".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link CreateDeliveryRequest#execute()} method to invoke the
     * remote operation. <p> {@link CreateDeliveryRequest#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param customerID
     * @since 1.13
     */
    protected CreateDeliveryRequest(java.lang.Long customerID) {
      super(CustomerApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.DeliveryRequest.class);
      this.customerID = com.google.api.client.util.Preconditions.checkNotNull(customerID, "Required parameter customerID must be specified.");
    }

    @Override
    public CreateDeliveryRequest setAlt(java.lang.String alt) {
      return (CreateDeliveryRequest) super.setAlt(alt);
    }

    @Override
    public CreateDeliveryRequest setFields(java.lang.String fields) {
      return (CreateDeliveryRequest) super.setFields(fields);
    }

    @Override
    public CreateDeliveryRequest setKey(java.lang.String key) {
      return (CreateDeliveryRequest) super.setKey(key);
    }

    @Override
    public CreateDeliveryRequest setOauthToken(java.lang.String oauthToken) {
      return (CreateDeliveryRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateDeliveryRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateDeliveryRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateDeliveryRequest setQuotaUser(java.lang.String quotaUser) {
      return (CreateDeliveryRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateDeliveryRequest setUserIp(java.lang.String userIp) {
      return (CreateDeliveryRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long customerID;

    /**

     */
    public java.lang.Long getCustomerID() {
      return customerID;
    }

    public CreateDeliveryRequest setCustomerID(java.lang.Long customerID) {
      this.customerID = customerID;
      return this;
    }

    @Override
    public CreateDeliveryRequest set(String parameterName, Object value) {
      return (CreateDeliveryRequest) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDeliveryRequestsOfCustomer".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetDeliveryRequestsOfCustomer#execute()} method to invoke the remote
   * operation.
   *
   * @param customerID
   * @return the request
   */
  public GetDeliveryRequestsOfCustomer getDeliveryRequestsOfCustomer(java.lang.Long customerID) throws java.io.IOException {
    GetDeliveryRequestsOfCustomer result = new GetDeliveryRequestsOfCustomer(customerID);
    initialize(result);
    return result;
  }

  public class GetDeliveryRequestsOfCustomer extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.DeliveryRequestCollection> {

    private static final String REST_PATH = "deliveryrequestcollection/{customerID}";

    /**
     * Create a request for the method "getDeliveryRequestsOfCustomer".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetDeliveryRequestsOfCustomer#execute()} method to invoke
     * the remote operation. <p> {@link GetDeliveryRequestsOfCustomer#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param customerID
     * @since 1.13
     */
    protected GetDeliveryRequestsOfCustomer(java.lang.Long customerID) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.DeliveryRequestCollection.class);
      this.customerID = com.google.api.client.util.Preconditions.checkNotNull(customerID, "Required parameter customerID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDeliveryRequestsOfCustomer setAlt(java.lang.String alt) {
      return (GetDeliveryRequestsOfCustomer) super.setAlt(alt);
    }

    @Override
    public GetDeliveryRequestsOfCustomer setFields(java.lang.String fields) {
      return (GetDeliveryRequestsOfCustomer) super.setFields(fields);
    }

    @Override
    public GetDeliveryRequestsOfCustomer setKey(java.lang.String key) {
      return (GetDeliveryRequestsOfCustomer) super.setKey(key);
    }

    @Override
    public GetDeliveryRequestsOfCustomer setOauthToken(java.lang.String oauthToken) {
      return (GetDeliveryRequestsOfCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDeliveryRequestsOfCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDeliveryRequestsOfCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDeliveryRequestsOfCustomer setQuotaUser(java.lang.String quotaUser) {
      return (GetDeliveryRequestsOfCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDeliveryRequestsOfCustomer setUserIp(java.lang.String userIp) {
      return (GetDeliveryRequestsOfCustomer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long customerID;

    /**

     */
    public java.lang.Long getCustomerID() {
      return customerID;
    }

    public GetDeliveryRequestsOfCustomer setCustomerID(java.lang.Long customerID) {
      this.customerID = customerID;
      return this;
    }

    @Override
    public GetDeliveryRequestsOfCustomer set(String parameterName, Object value) {
      return (GetDeliveryRequestsOfCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getItemsOfCategoryByID".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetItemsOfCategoryByID#execute()} method to invoke the remote
   * operation.
   *
   * @param categoryID
   * @return the request
   */
  public GetItemsOfCategoryByID getItemsOfCategoryByID(java.lang.Long categoryID) throws java.io.IOException {
    GetItemsOfCategoryByID result = new GetItemsOfCategoryByID(categoryID);
    initialize(result);
    return result;
  }

  public class GetItemsOfCategoryByID extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.ItemCollection> {

    private static final String REST_PATH = "itemcollection/{categoryID}";

    /**
     * Create a request for the method "getItemsOfCategoryByID".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetItemsOfCategoryByID#execute()} method to invoke the
     * remote operation. <p> {@link GetItemsOfCategoryByID#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param categoryID
     * @since 1.13
     */
    protected GetItemsOfCategoryByID(java.lang.Long categoryID) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.ItemCollection.class);
      this.categoryID = com.google.api.client.util.Preconditions.checkNotNull(categoryID, "Required parameter categoryID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItemsOfCategoryByID setAlt(java.lang.String alt) {
      return (GetItemsOfCategoryByID) super.setAlt(alt);
    }

    @Override
    public GetItemsOfCategoryByID setFields(java.lang.String fields) {
      return (GetItemsOfCategoryByID) super.setFields(fields);
    }

    @Override
    public GetItemsOfCategoryByID setKey(java.lang.String key) {
      return (GetItemsOfCategoryByID) super.setKey(key);
    }

    @Override
    public GetItemsOfCategoryByID setOauthToken(java.lang.String oauthToken) {
      return (GetItemsOfCategoryByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItemsOfCategoryByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItemsOfCategoryByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItemsOfCategoryByID setQuotaUser(java.lang.String quotaUser) {
      return (GetItemsOfCategoryByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItemsOfCategoryByID setUserIp(java.lang.String userIp) {
      return (GetItemsOfCategoryByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long categoryID;

    /**

     */
    public java.lang.Long getCategoryID() {
      return categoryID;
    }

    public GetItemsOfCategoryByID setCategoryID(java.lang.Long categoryID) {
      this.categoryID = categoryID;
      return this;
    }

    @Override
    public GetItemsOfCategoryByID set(String parameterName, Object value) {
      return (GetItemsOfCategoryByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getListOfMerchantsViewsOrderedBy".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetListOfMerchantsViewsOrderedBy#execute()} method to invoke the
   * remote operation.
   *
   * @param orderByOption
   * @param merchantType
   * @param limitNumber
   * @return the request
   */
  public GetListOfMerchantsViewsOrderedBy getListOfMerchantsViewsOrderedBy(java.lang.String orderByOption, java.lang.String merchantType, java.lang.Integer limitNumber) throws java.io.IOException {
    GetListOfMerchantsViewsOrderedBy result = new GetListOfMerchantsViewsOrderedBy(orderByOption, merchantType, limitNumber);
    initialize(result);
    return result;
  }

  public class GetListOfMerchantsViewsOrderedBy extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.CollectionResponseMerchantView> {

    private static final String REST_PATH = "collectionresponse_merchantview/{orderByOption}/{merchantType}/{limitNumber}";

    /**
     * Create a request for the method "getListOfMerchantsViewsOrderedBy".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetListOfMerchantsViewsOrderedBy#execute()} method to
     * invoke the remote operation. <p> {@link GetListOfMerchantsViewsOrderedBy#initialize(com.google.
     * api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param orderByOption
     * @param merchantType
     * @param limitNumber
     * @since 1.13
     */
    protected GetListOfMerchantsViewsOrderedBy(java.lang.String orderByOption, java.lang.String merchantType, java.lang.Integer limitNumber) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.CollectionResponseMerchantView.class);
      this.orderByOption = com.google.api.client.util.Preconditions.checkNotNull(orderByOption, "Required parameter orderByOption must be specified.");
      this.merchantType = com.google.api.client.util.Preconditions.checkNotNull(merchantType, "Required parameter merchantType must be specified.");
      this.limitNumber = com.google.api.client.util.Preconditions.checkNotNull(limitNumber, "Required parameter limitNumber must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setAlt(java.lang.String alt) {
      return (GetListOfMerchantsViewsOrderedBy) super.setAlt(alt);
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setFields(java.lang.String fields) {
      return (GetListOfMerchantsViewsOrderedBy) super.setFields(fields);
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setKey(java.lang.String key) {
      return (GetListOfMerchantsViewsOrderedBy) super.setKey(key);
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setOauthToken(java.lang.String oauthToken) {
      return (GetListOfMerchantsViewsOrderedBy) super.setOauthToken(oauthToken);
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetListOfMerchantsViewsOrderedBy) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setQuotaUser(java.lang.String quotaUser) {
      return (GetListOfMerchantsViewsOrderedBy) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy setUserIp(java.lang.String userIp) {
      return (GetListOfMerchantsViewsOrderedBy) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String orderByOption;

    /**

     */
    public java.lang.String getOrderByOption() {
      return orderByOption;
    }

    public GetListOfMerchantsViewsOrderedBy setOrderByOption(java.lang.String orderByOption) {
      this.orderByOption = orderByOption;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String merchantType;

    /**

     */
    public java.lang.String getMerchantType() {
      return merchantType;
    }

    public GetListOfMerchantsViewsOrderedBy setMerchantType(java.lang.String merchantType) {
      this.merchantType = merchantType;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limitNumber;

    /**

     */
    public java.lang.Integer getLimitNumber() {
      return limitNumber;
    }

    public GetListOfMerchantsViewsOrderedBy setLimitNumber(java.lang.Integer limitNumber) {
      this.limitNumber = limitNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursorStr;

    /**

     */
    public java.lang.String getCursorStr() {
      return cursorStr;
    }

    public GetListOfMerchantsViewsOrderedBy setCursorStr(java.lang.String cursorStr) {
      this.cursorStr = cursorStr;
      return this;
    }

    @Override
    public GetListOfMerchantsViewsOrderedBy set(String parameterName, Object value) {
      return (GetListOfMerchantsViewsOrderedBy) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantByID".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetMerchantByID#execute()} method to invoke the remote operation.
   *
   * @param merchantID
   * @return the request
   */
  public GetMerchantByID getMerchantByID(java.lang.Long merchantID) throws java.io.IOException {
    GetMerchantByID result = new GetMerchantByID(merchantID);
    initialize(result);
    return result;
  }

  public class GetMerchantByID extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.Merchant> {

    private static final String REST_PATH = "merchant/{merchantID}";

    /**
     * Create a request for the method "getMerchantByID".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetMerchantByID#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantByID#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param merchantID
     * @since 1.13
     */
    protected GetMerchantByID(java.lang.Long merchantID) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.Merchant.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantByID setAlt(java.lang.String alt) {
      return (GetMerchantByID) super.setAlt(alt);
    }

    @Override
    public GetMerchantByID setFields(java.lang.String fields) {
      return (GetMerchantByID) super.setFields(fields);
    }

    @Override
    public GetMerchantByID setKey(java.lang.String key) {
      return (GetMerchantByID) super.setKey(key);
    }

    @Override
    public GetMerchantByID setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantByID setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantByID setUserIp(java.lang.String userIp) {
      return (GetMerchantByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public GetMerchantByID setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @Override
    public GetMerchantByID set(String parameterName, Object value) {
      return (GetMerchantByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantByName".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetMerchantByName#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public GetMerchantByName getMerchantByName(java.lang.String name) throws java.io.IOException {
    GetMerchantByName result = new GetMerchantByName(name);
    initialize(result);
    return result;
  }

  public class GetMerchantByName extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.MerchantViewCollection> {

    private static final String REST_PATH = "merchantviewcollection/{name}";

    /**
     * Create a request for the method "getMerchantByName".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetMerchantByName#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantByName#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected GetMerchantByName(java.lang.String name) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.MerchantViewCollection.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantByName setAlt(java.lang.String alt) {
      return (GetMerchantByName) super.setAlt(alt);
    }

    @Override
    public GetMerchantByName setFields(java.lang.String fields) {
      return (GetMerchantByName) super.setFields(fields);
    }

    @Override
    public GetMerchantByName setKey(java.lang.String key) {
      return (GetMerchantByName) super.setKey(key);
    }

    @Override
    public GetMerchantByName setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantByName) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantByName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantByName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantByName setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantByName) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantByName setUserIp(java.lang.String userIp) {
      return (GetMerchantByName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public GetMerchantByName setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public GetMerchantByName set(String parameterName, Object value) {
      return (GetMerchantByName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantMenuByID".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetMerchantMenuByID#execute()} method to invoke the remote operation.
   *
   * @param merchantID
   * @return the request
   */
  public GetMerchantMenuByID getMerchantMenuByID(java.lang.Long merchantID) throws java.io.IOException {
    GetMerchantMenuByID result = new GetMerchantMenuByID(merchantID);
    initialize(result);
    return result;
  }

  public class GetMerchantMenuByID extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.MenuView> {

    private static final String REST_PATH = "menuview/{merchantID}";

    /**
     * Create a request for the method "getMerchantMenuByID".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetMerchantMenuByID#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantMenuByID#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param merchantID
     * @since 1.13
     */
    protected GetMerchantMenuByID(java.lang.Long merchantID) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.MenuView.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantMenuByID setAlt(java.lang.String alt) {
      return (GetMerchantMenuByID) super.setAlt(alt);
    }

    @Override
    public GetMerchantMenuByID setFields(java.lang.String fields) {
      return (GetMerchantMenuByID) super.setFields(fields);
    }

    @Override
    public GetMerchantMenuByID setKey(java.lang.String key) {
      return (GetMerchantMenuByID) super.setKey(key);
    }

    @Override
    public GetMerchantMenuByID setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantMenuByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantMenuByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantMenuByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantMenuByID setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantMenuByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantMenuByID setUserIp(java.lang.String userIp) {
      return (GetMerchantMenuByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public GetMerchantMenuByID setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @Override
    public GetMerchantMenuByID set(String parameterName, Object value) {
      return (GetMerchantMenuByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMerchantViewByID".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link GetMerchantViewByID#execute()} method to invoke the remote operation.
   *
   * @param merchantID
   * @return the request
   */
  public GetMerchantViewByID getMerchantViewByID(java.lang.Long merchantID) throws java.io.IOException {
    GetMerchantViewByID result = new GetMerchantViewByID(merchantID);
    initialize(result);
    return result;
  }

  public class GetMerchantViewByID extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.MerchantView> {

    private static final String REST_PATH = "merchantview/{merchantID}";

    /**
     * Create a request for the method "getMerchantViewByID".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link GetMerchantViewByID#execute()} method to invoke the remote
     * operation. <p> {@link GetMerchantViewByID#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param merchantID
     * @since 1.13
     */
    protected GetMerchantViewByID(java.lang.Long merchantID) {
      super(CustomerApi.this, "GET", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.MerchantView.class);
      this.merchantID = com.google.api.client.util.Preconditions.checkNotNull(merchantID, "Required parameter merchantID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMerchantViewByID setAlt(java.lang.String alt) {
      return (GetMerchantViewByID) super.setAlt(alt);
    }

    @Override
    public GetMerchantViewByID setFields(java.lang.String fields) {
      return (GetMerchantViewByID) super.setFields(fields);
    }

    @Override
    public GetMerchantViewByID setKey(java.lang.String key) {
      return (GetMerchantViewByID) super.setKey(key);
    }

    @Override
    public GetMerchantViewByID setOauthToken(java.lang.String oauthToken) {
      return (GetMerchantViewByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMerchantViewByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMerchantViewByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMerchantViewByID setQuotaUser(java.lang.String quotaUser) {
      return (GetMerchantViewByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMerchantViewByID setUserIp(java.lang.String userIp) {
      return (GetMerchantViewByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long merchantID;

    /**

     */
    public java.lang.Long getMerchantID() {
      return merchantID;
    }

    public GetMerchantViewByID setMerchantID(java.lang.Long merchantID) {
      this.merchantID = merchantID;
      return this;
    }

    @Override
    public GetMerchantViewByID set(String parameterName, Object value) {
      return (GetMerchantViewByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendDeliveryRequest".
   *
   * This request holds the parameters needed by the customerApi server.  After setting any optional
   * parameters, call the {@link SendDeliveryRequest#execute()} method to invoke the remote operation.
   *
   * @param deliveryRequestJson
   * @return the request
   */
  public SendDeliveryRequest sendDeliveryRequest(java.lang.String deliveryRequestJson) throws java.io.IOException {
    SendDeliveryRequest result = new SendDeliveryRequest(deliveryRequestJson);
    initialize(result);
    return result;
  }

  public class SendDeliveryRequest extends CustomerApiRequest<com.appspot.myapplicationid.customerApi.model.DeliveryRequest> {

    private static final String REST_PATH = "sendDeliveryRequest/{deliveryRequestJson}";

    /**
     * Create a request for the method "sendDeliveryRequest".
     *
     * This request holds the parameters needed by the the customerApi server.  After setting any
     * optional parameters, call the {@link SendDeliveryRequest#execute()} method to invoke the remote
     * operation. <p> {@link SendDeliveryRequest#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param deliveryRequestJson
     * @since 1.13
     */
    protected SendDeliveryRequest(java.lang.String deliveryRequestJson) {
      super(CustomerApi.this, "POST", REST_PATH, null, com.appspot.myapplicationid.customerApi.model.DeliveryRequest.class);
      this.deliveryRequestJson = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestJson, "Required parameter deliveryRequestJson must be specified.");
    }

    @Override
    public SendDeliveryRequest setAlt(java.lang.String alt) {
      return (SendDeliveryRequest) super.setAlt(alt);
    }

    @Override
    public SendDeliveryRequest setFields(java.lang.String fields) {
      return (SendDeliveryRequest) super.setFields(fields);
    }

    @Override
    public SendDeliveryRequest setKey(java.lang.String key) {
      return (SendDeliveryRequest) super.setKey(key);
    }

    @Override
    public SendDeliveryRequest setOauthToken(java.lang.String oauthToken) {
      return (SendDeliveryRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public SendDeliveryRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendDeliveryRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendDeliveryRequest setQuotaUser(java.lang.String quotaUser) {
      return (SendDeliveryRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendDeliveryRequest setUserIp(java.lang.String userIp) {
      return (SendDeliveryRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String deliveryRequestJson;

    /**

     */
    public java.lang.String getDeliveryRequestJson() {
      return deliveryRequestJson;
    }

    public SendDeliveryRequest setDeliveryRequestJson(java.lang.String deliveryRequestJson) {
      this.deliveryRequestJson = deliveryRequestJson;
      return this;
    }

    @Override
    public SendDeliveryRequest set(String parameterName, Object value) {
      return (SendDeliveryRequest) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link CustomerApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link CustomerApi}. */
    @Override
    public CustomerApi build() {
      return new CustomerApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CustomerApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCustomerApiRequestInitializer(
        CustomerApiRequestInitializer customerapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(customerapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
